  rules_version = '2';
  service cloud.firestore {
    match /databases/{database}/documents {

      function isAuthenticated() {
        return request.auth != null && request.auth.uid != null;
      }

      function isChatMember(chatId) {
        let chat = get(/databases/$(database)/documents/chats/$(chatId)).data;
        return chat.isPrivate == false || (isAuthenticated() && request.auth.uid in chat.memberIds);
      }

      match /users/{userId} {
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
      }

      match /chats/{chatId} {
        allow read: if resource.data.isPrivate == false || (isAuthenticated() && request.auth.uid in resource.data.memberIds);
        allow create: if isAuthenticated();
        allow update: if isAuthenticated() && request.auth.uid ==  resource.createdBy.uid;
      
        match /messages/{messageId} {
          allow read, create: if isAuthenticated() && isChatMember(chatId);
          allow update, delete: if isAuthenticated() && request.auth.uid ==  resource.createdBy.uid;
        }
      }
    }
  }